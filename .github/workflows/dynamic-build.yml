name: B&P Dynamic Docker Images
on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/dynamic-build.yml"
      - "deployment/images/**"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/dynamic-build.yml"
      - "deployment/images/**"

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for comparing changes

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: deployment/images/**

      - name: Set up build matrix
        id: set-matrix
        run: |
          cd deployment/images
          # Initialize an empty array for the matrix
          MATRIX="["
          SEPARATOR=""

          # Find all Dockerfiles
          for dockerfile in $(find . -type f -name "Dockerfile.*"); do
            image_name=$(echo $dockerfile | sed 's/.*Dockerfile\.//')
            context_dir=$(dirname $dockerfile)
            
            # Check if Dockerfile or any files in its context directory changed
            CHANGED=false
            for changed_file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ $changed_file == deployment/images/$context_dir/* ]] || [[ $changed_file == $dockerfile ]]; then
                CHANGED=true
                break
              fi
            done
            
            # If changed, add to matrix
            if [ "$CHANGED" = true ]; then
              MATRIX="${MATRIX}${SEPARATOR}{\"image\": \"${image_name}\", \"dockerfile\": \"${dockerfile}\", \"context\": \"${context_dir}\"}"
              SEPARATOR=","
            fi
          done
          MATRIX="${MATRIX}]"

          # If matrix is empty (just []), set to empty list to skip builds
          if [ "$MATRIX" = "[]" ]; then
            echo "No changes detected in any Docker contexts"
            echo "matrix=[]" >> $GITHUB_OUTPUT
          else
            echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          fi

  build_and_push:
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include: ${{ fromJson(needs.detect_changes.outputs.matrix) }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define lowercase repository owner
        id: repo
        run: echo "REPO_OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: "./deployment/images/${{ matrix.context }}"
          file: "./deployment/images/${{ matrix.dockerfile }}"
          push: true
          tags: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ matrix.image }}:latest
